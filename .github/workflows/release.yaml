name: Release

on:
  push:
    branches:
      - stable

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    if: ${{ github.event.pull_request.merged == true || !contains(github.event.pull_request.body, '[skip-ci]') }}

    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v3

      - name: üóÑÔ∏è Load OP Secrets
        id: op-secrets
        uses: 1password/load-secrets-action@v1
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          BOT_NAME: op://detra/rawdwz5qfijf3ojxok3byitbqm/username
          BOT_EMAIL: op://detra/rawdwz5qfijf3ojxok3byitbqm/email
          BOT_GH_TOKEN: op://detra/rawdwz5qfijf3ojxok3byitbqm/credential
          BOT_NPM_TOKEN: op://detra/fgecthfcjhz3l6j7spintrag7m/credential
          BOT_GPG_FINGERPRINT: op://detra/job7gtbefggw2m6kgudxvufyue/fingerprint
          BOT_GPG_PASSPHRASE_KEY: op://detra/job7gtbefggw2m6kgudxvufyue/passphrase
          BOT_GPG_PRIVATE_KEY: op://detra/job7gtbefggw2m6kgudxvufyue/private_key

      - name: üîë Setup GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          git_committer_name: ${{ steps.op-secrets.outputs.BOT_NAME }}
          git_committer_email: ${{ steps.op-secrets.outputs.BOT_EMAIL }}
          gpg_private_key: ${{ steps.op-secrets.outputs.BOT_GPG_PRIVATE_KEY }}
          fingerprint: ${{ steps.op-secrets.outputs.BOT_GPG_FINGERPRINT }}
          passphrase: ${{ steps.op-secrets.outputs.BOT_GPG_PASSPHRASE }}
          git_commit_gpgsign: true
          git_push_gpgsign: true
          git_tag_gpgsign: true
          git_user_signingkey: true
          trust_level: 5

      - name: üèóÔ∏è Configure .bash_profile
        run: |
          cat << EOF > "$HOME/.bash_profile"
            GPG_TTY=$(tty)
            export GPG_TTY
          EOF

      - name: üèóÔ∏è Configure Git User
        run: |
          git config --global user.name ${{ steps.op-secrets.outputs.BOT_NAME }}
          git config --global user.email ${{ steps.op-secrets.outputs.BOT_EMAIL }}
          git config --global commit.gpgsign true

      - name: üì¶ Setup PNPm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: üü¢ Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm

      - name: üß© Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: üèóÔ∏è Configure .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=${{ steps.op-secrets.outputs.BOT_NPM_TOKEN }}
          EOF

      - name: üì£ Create Release PR or Publish to NPM
        id: changesets
        uses: changesets/action@v1
        env:
          NPM_TOKEN: ${{ steps.op-secrets.outputs.BOT_NPM_TOKEN }}
          GITHUB_TOKEN: ${{ steps.op-secrets.outputs.BOT_GH_TOKEN }}
        with:
          setupGitUser: false
          publish: pnpm run release
          title: 'chore: bump the package version'
          commit: 'chore: bump the package version'
